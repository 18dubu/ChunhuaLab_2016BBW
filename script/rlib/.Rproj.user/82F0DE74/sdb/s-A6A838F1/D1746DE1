{
    "contents" : "rm(list=ls())\nsource(\"./util.R\")\ntarget = 'Comparison_in_ex'\nmkdir(paste(\"../../result/\",target,\"/topCEF/all/\",sep=\"\"))\n\ntarget1 = 'inclusion'\ntarget2 = 'exclusion'\n\ncount_occur<-function(features,restrict=0){\n  ranking <- list()\n  for (cde in features){\n#    if(!(cde %in% restrict)){##\n#      next##\n#    }##\n    if(is.null(ranking[[cde]])){\n      ranking[[cde]] = 0\n    }\n    ranking[[cde]] = ranking[[cde]] + 1\n  }\n  trans <- data.frame(unlist(ranking))\n  trans<-data.frame(CEF=attributes(trans)$row.names,COUNT=trans$unlist.ranking.)\n  return (trans[order(trans[,2],decreasing=T),])#\n}\n\n\nmapST<-function(listCDE,mappingTable){\n  mapping <- read.table(mappingTable,sep='\\t',header=T,row.names=NULL)\n  mapping.cde <- mapping[,1]\n  mapping.st <- mapping[,2]\n  listST = array()\n  j=1\n  index = array()\n  for (i in listCDE){\n    index[j] = which(i == mapping.cde)\n    j =j+1\n  }\n  listST <- mapping.st[index] \n  \n  if(length(listST) == length(listCDE)){\n    return(listST)\n  }\n  else{\n    print (\"input/output length differ\\n\")\n    return(0)\n  }\n}\n\n\n#table: Most frequently used CEF (In/Ex/Joint) for all diseases\n\nall.ex<-read.table(paste(\"../../result/\",target2,\"/allData_table\",sep=''),header=T,sep='\\t', row.names=NULL)\nall.in<-read.table(paste(\"../../result/\",target1,\"/allData_table\",sep=''),sep='\\t',header=T)\nex.all<-readLines(paste(\"../../result/\",target2,\"/allCDE\",sep=''))\nin.all<-readLines(paste(\"../../result/\",target1,\"/allCDE\",sep=''))\n\nin.DiseaseName<-all.in[,2]\nex.DiseaseName<-all.ex[,2]\nshare.disease = intersect(in.DiseaseName,ex.DiseaseName)\nall.ex <- all.ex[all.ex[,2] %in% share.disease,]\nall.in <- all.in[all.in[,2] %in% share.disease,]\n\nin.CDE<-all.in[,3]\nin.Freq<-all.in[,4]\nin.st <-all.in[,5]\nex.CDE<-all.ex[,3]\nex.Freq<-all.ex[,4]\nex.st<-all.ex[,5]\n\ninter <- intersect(ex.all,in.all)\nex.unique<-setdiff(ex.all,inter)\nin.unique<-setdiff(in.all,inter)\n\nmappingTable <- paste('../../result/cde_st_table_',target1,'_',target2,sep='') #in\n\nout.rank<- paste(\"../../result/\",target,\"/topCEF/all/intersection_sig_MI\",sep='') #out\n\n\ncompareList.findSig.MI<-function(primaryDF,secondaryDF){\n  #inputs are two combined dataframe which have two columns:first for document name, second for word name\n  #function finds the significant terms for primary list by excluding those which are also frequently occur in secondary list using Mutual Information\n  #n11:num of doc that contains vocab, belongs to p; n10: num of doc that contains vocab, belongs to s; n00: num of doc that contains no vocab, belongs to s; n01: num of doc that contains no vocab, belongs to p\n  p<-primaryDF\n  s<-secondaryDF\n  #smoothing  \n  n <- length(unique(p[,1]))+length(unique(s[,1]))+2#total doc num, smoothing 2\n  mylist <- list()\n  for (vocab in unique(p[,2])){\n    pcandi <- p[p[,2]==vocab,]\n    scandi <- s[s[,2]==vocab,]\n    n11 <- length(unique(pcandi[,1]))+0.5#smoothing0.5\n    n10 <- length(unique(scandi[,1]))+0.5#smoothing0.5\n    n00 <- length(unique(s[,1])) - length(unique(scandi[,1]))+0.5#smoothing0.5\n    n01 <- length(unique(p[,1])) - length(unique(pcandi[,1]))+0.5#smoothing0.5\n    n0. <- n00 + n01\n    n1. <- n10 + n11\n    n.0 <- n00 + n10\n    n.1 <- n11 + n01\n    I <- (n11/n)*log2(n*n11/n.1/n1.) + (n01/n)*log2(n*n01/n0./n.1) + (n10/n)*log2(n*n10/n1./n.0) + (n00/n)*log2(n*n00/n.0/n0.)\n    mylist[vocab]<-I\n  }\n  midf<-data.frame(vocab=names(mylist),mi=unlist(mylist,use.names=F))\n  occurp <- data.frame(table(p[,2]))\n  occurs <- data.frame(table(s[,2]))\n  for (check in occurp[,1]){\n    if(length(occurs[occurs[,1]==check,][,1])!=0){\n      if(occurp[occurp[,1]==check,][,2] < occurs[occurs[,1]==check,][,2]){\n        occurp <- occurp[!(occurp[,1]==check),]\n      }\n    }\n  }\n  names(occurp)<-c('vocab','count')\n  mydf<- merge(midf,occurp,by='vocab')\n  mydf.sort<-mydf[order(mydf[,2],mydf[,3],decreasing=T),]\n  return (mydf.sort)\n}\n\nout.mi<- paste(\"../../result/\",target,\"/topCEF/all/MI_table_all\",sep='')\nEX<-all.ex[,c(2,3)]\nIN<-all.in[,c(2,3)]\nmi<-compareList.findSig.MI(EX,IN)\nwrite.table(mi,out.mi,)\n\n\n\nranking.df1<-count_occur(ex.CDE,inter)\nranking.df2<-count_occur(in.CDE,inter)\nunion.all<-union(ranking.df1[,1],ranking.df2[,1])\nranking.df<-list()\n\nfor (i in union.all){\n  if(!(i %in% ranking.df1[,1])){\n    a<-data.frame(CEF=i,COUNT=0)\n    ranking.df1=rbind(ranking.df1,a)\n  }\n}\n\nfor (i in union.all){\n  if(!(i %in% ranking.df2[,1])){\n    a<-data.frame(CEF=i,COUNT=0)\n    ranking.df2=rbind(ranking.df2,a)\n  }\n}\n\nranking.df<-merge(ranking.df1,ranking.df2,by='CEF')\n\nlistCDE<-ranking.df[,1]\nmapped.st<- mapST(listCDE,mappingTable)\nranking.df <- data.frame(ranking.df,mapped.st,stringsAsFactors=F)\nwrite.table(ranking.df[order(as.numeric(ranking.df[,2]),decreasing=T),],out.rank,quote=F,sep='\\t',col.names=F,row.names=F)\n\n\n###########################\nall.ex<-read.table(paste(\"../../result/\",target2,\"/allData_table\",sep=''),header=T,sep='\\t', row.names=NULL)\nall.ex <- all.ex[all.ex[,2] %in% share.disease,]\nin.DiseaseName<-all.in[,2]\nex.DiseaseName<-all.ex[,2]\nshare.disease = intersect(in.DiseaseName,ex.DiseaseName)\nall.ex <- all.ex[all.ex[,2] %in% share.disease,]\n\n\nnumlimitperdisease=20\n#table: Most frequently used CEF (In/Ex/Joint) for each disease \nmkdir(paste(\"../../result/\",target,\"/topCEF/each/\",sep=\"\"))\nout.top5.sig <- paste(\"../../result/\",target,\"/topCEF/each/intersection_sig_MI\",sep='')\n#output ranking list: top 5 cde for each disease\nif(file.exists(out.top5.sig)){\n  file.remove(out.top5.sig)\n  print(paste(\"original file removed\",out.top5.sig))\n}\nfor (disease in share.disease){#share.disease\n  num.per.disease <- numlimitperdisease\n  candi.in = all.in[in.DiseaseName==disease,]\n  candi.ex = all.ex[ex.DiseaseName==disease,]\n  Pubmed = rep(0,length(candi.ex[,1]))\n  candi.ex = data.frame(candi.ex,Pubmed)\n  union <- union(candi.in$CDEs,candi.ex$CDEs)\n  inter <- intersect(candi.in$CDEs,candi.ex$CDEs)\n  if (length(union)==0){next}\n  if (length(union)<num.per.disease){num.per.disease=length(union)}\n  ex.unique<-setdiff(candi.ex$CDEs,inter)\n  in.unique<-setdiff(candi.in$CDEs,inter)\n  for (i in inter){\n    add = sum(candi.in[candi.in$CDEs==i,4])\n    candi.ex[candi.ex$CDEs==i,length(candi.ex[1,])]=candi.ex[candi.ex$CDEs==i,length(candi.ex[1,])]+add\n  }\n  write.table(candi.ex[order(candi.ex[,4],decreasing=T)[1:num.per.disease],],out.top5.sig,quote = F,row.names=F,col.names=F,append = T,sep='\\t')\n}\n",
    "created" : 1394221210335.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4118906260",
    "id" : "D1746DE1",
    "lastKnownWriteTime" : 1394302046,
    "path" : "~/Dropbox/research/chunhua project/common eligibility feature/src/rlib/Comparison_topCEF_MI.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}