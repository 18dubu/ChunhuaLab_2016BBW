{
    "contents" : "setwd(\"/Users/mahandong/Dropbox/study/Biomedical Informatics/compMethod/Lab/Lab5/netscience\")\nlibrary(igraph)\n\nauthors <- read.graph(\"netscience.gml\",format='gml')\n\ncb<-centralization.betweenness(authors)\ncd<-centralization.degree(authors)\ncb.df<-data.frame(cb$res,V(authors)$label)\ncd.df<-data.frame(cd$res,V(authors)$label)\nhead(cd.df[order(cd.df[,1],decreasing=T),])\nhead(cb.df[order(cb.df[,1],decreasing=T),])\n\ninstall.packages('flexclust')\n\nsetwd('/Users/mahandong/Downloads/clustering_lab_2014_final')\nlibrary(cluster)\nlibrary(grid)\nlibrary(lattice)\nlibrary(modeltools)\nlibrary(stats4)\nlibrary(flexclust)\n\nall<-read.table('bcwisc.data',sep=',',header=T)\nrow.names(all)<-all[,1]\nnames<-all[,1]\nall<-all[,-1]\nlength(all[,1])\nlength(grep('M',names))\nlength(grep('B',names))\npairs(all,main='scatter plot for the breaset cancer dataset landscapt',bg=c('red','green3'),pch=10)\n\na<-as.character(names)\nb<-strsplit(a,\"_\",fixed=TRUE)\ntype<-unlist(lapply(b, function(x) x[][1]))\nnumber<-unlist(lapply(b, function(x) x[][2]))\nall.appendType<-data.frame(all,type)\npairs(all.appendType[1:9],main='scatter plot for the breaset cancer dataset landscapt',pch=21,bg=c('red','green3')[unclass(all.appendType$type)])\n\nsource('./cluster.R.R')\nk2<-kmeans(all.appendType[1:9],centers=2)\nClusterPurity(k2$cluster,type)\nfor.rand<-data.frame(k2$cluster,type)\nrandIndex(table(for.rand))\n\nplot(all.appendType$Clump,all.appendType$UniSize,main=('Relation between Clump and Unisize'),col=c('red','green')[all.appendType$type])\npoints(k2$centers[1],k2$centers[3],pch=8)\npoints(k2$centers[2],k2$centers[4],pch=8)\n\nset.seed(1)\nkseed1<-kmeans(all.appendType[1:9],centers=2)\nkseed1$centers\nset.seed(2)\nkseed2<-kmeans(all.appendType[1:9],centers=2)\nkseed2$centers\n\n\n\ncheckPurity <-function(center){\n  set.seed(1)\n  k3<-kmeans(all.appendType[1:9],centers=center)\n  return (ClusterPurity(k3$cluster,type))\n}\ncheckRand <-function(center){\n  set.seed(1)\n  k3<-kmeans(all.appendType[1:9],centers=center)\n  for.rand<-data.frame(k3$cluster,type)\n  return (randIndex(table(for.rand)))\n}\n\npu = array()\nra = array()\nfor (i in 1:100){\n  pu[i] = checkPurity(i)\n  ra[i] = checkRand(i)\n}\nindex <- 1:100\npu.table<-cbind(index,pu)\nra.table<-cbind(index,ra)\npar(mfrow=c(2,1))\nplot(pu.table,main='Purity given different center numbers',xlab='K center number',ylab='Purity',type = 'b')\nplot(ra.table,main='Rand Index given different center numbers',xlab='K center number',ylab='Rand Index',type = 'b')\n\n\n\n#lab7\ntrain<-read.table('train.txt',header=T)\ntest<-read.table('test.txt',header=T)\n\nplot(train$size,train$price,xlim=range(train$size),xlab='size',ylab='price',ylim=range(train$price),main='House price for different size')\n\nlin<-lm(price~size,train)\nsummary(lin)\n\nx<-range(train$size)[1]:range(train$size)[2]\ny<-lin$coefficients[2]*x+lin$coefficients[1]\nlines(x,y,col='red')\n\ntrain.predicted<-lin$fitted.values\nrss<-sum((train.predicted-train$price)**2)\n\nquad<-lm(price~size+I(size^2),train)\ny.2<-quad$coefficients[3]*x**2+quad$coefficients[2]*x+quad$coefficients[1]\nlines(x,y.2,col='blue')\n\ntrain.predicted.2<-quad$fitted.values\nrss.2<-sum((train.predicted.2-train$price)**2)\n\n#crazy<-lm(price~poly(size,10),train)\n\nformula<-as.formula(paste('price~',paste(\"I(size^\",1:10,')',sep='',collapse='+'),sep=''))\ncrazy<-lm(formula,train)\ni=1:10\nj=i-1\neval(parse(text=paste('y.10<-',paste('crazy$coefficients[',i,']*x**',j,sep='',collapse='+'),sep='')))\nlines(x,y.10,col='purple')\n\ntrain.predicted.10<-crazy$fitted.values\nrss.10<-sum((train.predicted.10-train$price)**2)\n\npoints(test$size,test$price,pch=4)\n\n#test\nplot(test$size,test$price,xlim=range(test$size),pch=4,xlab='size',ylab='price',ylim=range(test$price),main='House price for different size')\nlin<-lm(price~size,train)\nx<-range(test$size)[1]:range(test$size)[2]\ny<-lin$coefficients[2]*x+lin$coefficients[1]\nlines(x,y,col='red')\nquad<-lm(price~size+I(size^2),train)\ny.2<-quad$coefficients[3]*x**2+quad$coefficients[2]*x+quad$coefficients[1]\nlines(x,y.2,col='blue')\nformula<-as.formula(paste('price~',paste(\"I(size^\",1:10,')',sep='',collapse='+'),sep=''))\ncrazy<-lm(formula,train)\ni=1:10\nj=i-1\neval(parse(text=paste('y.10<-',paste('crazy$coefficients[',i,']*x**',j,sep='',collapse='+'),sep='')))\nlines(x,y.10,col='purple')\n\ntest.predicted<-lin$fitted.values\n(rss<-sum((test.predicted-test$price)**2))\ntest.predicted<-quad$fitted.values\n(rss<-sum((test.predicted-test$price)**2))\ntest.predicted<-crazy$fitted.values\n(rss<-sum((test.predicted-test$price)**2))\n\n",
    "created" : 1392995775558.000,
    "dirty" : true,
    "encoding" : "",
    "folds" : "",
    "hash" : "3370798345",
    "id" : "89F073EC",
    "lastKnownWriteTime" : 7091312790759350382,
    "path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}